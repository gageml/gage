name: Build

on:
  schedule:
   - cron:  '0 5 * * *'

  workflow_dispatch:
    inputs:
      posix:
        description: Build for POSIX
        type: boolean
        default: true
      windows:
        description: Build for Windows
        type: boolean
        default: false
      release:
        description: Publish to PyPI (select for release)
        type: boolean
        default: false

jobs:
  build-posix:
    name: Build - POSIX
    if: ${{ inputs.posix }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
        python:
          - '3.10'
          - '3.11'
          - '3.12'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Build package
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip wheel --no-deps --wheel-dir dist .

      - name: Install package
        run: |
          python -m venv test-env
          test-env/bin/pip install --upgrade pip
          test-env/bin/pip install dist/*.whl
          test-env/bin/gage check

      - name: Install test requirements
        run: |
          test-env/bin/pip install groktest

      - name: Configure environment for tests
        # Git config required by tests that run git commands
        run: |
          git config --global user.name unused
          git config --global user.email unused@localhost
          git config --global init.defaultBranch main

      - name: Run tests
        env:
          CI: 1
        run: |
          test-env/bin/groktest .

  build-windows:
    name: Build - Windows
    if: ${{ inputs.windows }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
        python:
          - '3.10'
          # - '3.11'
          # - '3.12'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Build package
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip wheel --no-deps --wheel-dir dist .

      - name: Install package
        run: |
          python -m venv test-env
          test-env\Scripts\pip install --upgrade pip
          pwsh -Command 'test-env\Scripts\pip install $(ls dist)'
          test-env\Scripts\gage check

      - name: Install test requirements
        run: |
          test-env\Scripts\pip install groktest

      - name: Configure environment for tests
        # Git config required by tests that run git commands
        run: |
          git config --global user.name unused
          git config --global user.email unused@localhost
          git config --global init.defaultBranch main
          mkdir \Tmp -Force

      - name: Run tests
        env:
          CI: 1
        run: |
          test-env\Scripts\groktest .
        shell: cmd

  publish-to-pypi:
    name: Publish to PyPI
    if: ${{ inputs.release }}
    needs:
      - build-posix
      # - build-windows
    strategy:
      matrix:
        os:
          # Create dist on Linux
          - ubuntu-latest
        python:
          # Use oldest supported version of Python to create dist
          - '3.10'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python for build
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
